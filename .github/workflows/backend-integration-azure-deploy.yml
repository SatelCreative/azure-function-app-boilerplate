name: Deploy Backend Integration to Azure

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - "**"
    paths:
      - 'backend-integration/**'
      - '.github/workflows/backend-integration-azure-deploy.yml'

# GitHub Actions workflow to deploy to Azure using azd
# To configure required secrets for connecting to Azure, simply run `azd pipeline config`

# Set up permissions for deploying with secretless Azure federated credentials
# https://learn.microsoft.com/en-us/azure/developer/github/connect-from-azure?tabs=azure-portal%2Clinux#set-up-azure-login-with-openid-connect-authentication
permissions:
  id-token: write
  contents: read

# Use concurrency to ensure that only a single job or workflow using the same concurrency group will run at a time
concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true  # Cancel previously queued jobs and run the latest
  

jobs:
    self-hosted-status:
      runs-on: ubuntu-latest
      timeout-minutes: 5
      outputs:
        runner-status: ${{ steps.runnerstatus.outputs.status }}
      steps:
        - name: Check runner status
          id: runnerstatus
          uses: SatelCreative/satel-gh-runner-check@1.0.3
          with:       
            github-runner-token: ${{ secrets.SELF_HOSTED_RUNNER_TOKEN }} #Should have access to manage runner
            org-name: SatelCreative

    build:
      needs: [self-hosted-status]
      timeout-minutes: 10
      runs-on: ${{ contains(needs.self-hosted-status.outputs.runner-status, 'online') && 'self-hosted' || 'ubuntu-latest' }}
      environment: "backend-integration-dev"
      env:
        AZURE_CLIENT_ID: ${{ vars.BACKEND_INTEGRATION_CLIENT_ID }}
        AZURE_TENANT_ID: ${{ vars.BACKEND_INTEGRATION_TENANT_ID }}
        AZURE_SUBSCRIPTION_ID: ${{ vars.BACKEND_INTEGRATION_SUBSCRIPTION_ID }}
        AZURE_CREDENTIALS: ${{ secrets.BACKEND_INTEGRATION_CREDENTIALS }}
      steps:
        - name: Checkout
          uses: actions/checkout@v4

        # - name: Install azd
        #   uses: Azure/setup-azd@v2.0.0

        - name: Log in with Azure (Federated Credentials)
          if: ${{ env.AZURE_CLIENT_ID != '' }}
          run: |
            echo "Using client ID: $AZURE_CLIENT_ID"
            azd auth login \
              --client-id "$AZURE_CLIENT_ID" \
              --federated-credential-provider "github" \
              --tenant-id "$AZURE_TENANT_ID"


        - name: Log in with Azure (Client Credentials)
          if: ${{ env.AZURE_CREDENTIALS != '' }}
          run: |
            $info = $Env:AZURE_CREDENTIALS | ConvertFrom-Json -AsHashtable;
            Write-Host "::add-mask::$($info.clientSecret)"

            azd auth login \
              --client-id "$($info.clientId)" \
              --client-secret "$($info.clientSecret)" \
              --tenant-id "$($info.tenantId)"
          env:
            AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}

        # Commented out to preserve existing application settings
        # Uncomment when infrastructure changes are needed
        #- name: Provision Infrastructure
        #  run: |
        #    cd backend-integration
        #    azd provision --no-prompt
        #  env:
        #    AZURE_ENV_NAME: ${{ vars.AZURE_ENV_NAME }}
        #    AZURE_LOCATION: ${{ vars.AZURE_LOCATION }}
        #    AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}

        - name: Deploy Application
          run: |
            cd backend-integration
            azd env new $AZURE_ENV_NAME --location $AZURE_LOCATION --subscription $AZURE_SUBSCRIPTION_ID --no-prompt
            azd deploy --no-prompt
          env:
            AZURE_ENV_NAME: "backend-integration-dev"
            AZURE_LOCATION: "westus2"
            AZURE_SUBSCRIPTION_ID: ${{ vars.BACKEND_INTEGRATION_SUBSCRIPTION_ID }}
      