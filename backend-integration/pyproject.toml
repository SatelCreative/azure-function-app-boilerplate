[project]
name = "backend-integration"
version = "0.1.0"
description = ""

authors = [
    {name = "Satel Backend",email = "backend@satel.ca"}
]
requires-python = ">=3.12,<4.0"


[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
package-mode = false 


[tool.poetry.dependencies]
azure-functions= "1.23.0"
fastapi= "0.116.1"
httpx= "0.24.1"
jinja2= "3.1.6"
loguru= "0.7.3"
pydantic= "2.11.7"
pydantic_settings= "2.10.1"
spylib= "0.10.5"



[tool.poetry.group.dev.dependencies]
poethepoet = "0.37.0"
mypy = "1.17.1"
mypy-extensions = "1.1.0"
pytest = "8.4.1"
pytest-asyncio = "1.1.0"
flake8 = "7.3.0"
isort = "6.0.1"
flake8-isort = "6.1.2"
flake8-quotes = "3.4.0"
flake8-print = "5.0.0"
flake8-pyproject = "1.2.3"
black = "25.1.0"
watchfiles = "1.1.0"
ruff = "0.12.9"
typer = "0.16.1"
# Pre-commit and security tools
pre-commit = "4.3.0"
detect-secrets = "1.5.0"

# ======== mypy ========
# https://mypy.readthedocs.io/en/stable/config_file.html#using-a-pyproject-toml-file
[tool.mypy]
ignore_missing_imports = true
plugins = "pydantic.mypy"
show_error_codes = true
check_untyped_defs = true
exclude = [".venv", ".mypy_cache", ".pytest_cache"]

# ======== isort =======
# https://pycqa.github.io/isort/docs/configuration/config_files.html#pyprojecttoml-preferred-format
[tool.isort]
line_length = 99
profile = "black"
multi_line_output = 3


# ======== ruff ========
# https://docs.astral.sh/ruff/rules/
[tool.ruff]
line-length = 99

[tool.ruff.lint]
select = [
# Mandatory    
    "A",  # flake8-builtins
    "B",  # flake8-bugbear
    "C",  # flake8-comprehensions,  
    "F",  # pyflakes,
    "I",  # isort, 
    "Q",  # flake8-quotes
    "N",  # pep8-naming 
    "S",  # flake8-bandit 
    "ASYNC", # flake8-async
    "COM",   # flake8-commas 
    "T20",   # flake8-print
    "YTT"    # flake8-2020
]
ignore = [
   "COM812",   # Trailing comma missing
   "N815",     # Variable {name} in class scope should not be mixedCase
   "S311",     # Standard pseudo-random 
   "S101",     # Use of `assert` detected
   "C419",     # Unnecessary list comprehension
]
[tool.ruff.lint.per-file-ignores]
"**/{tests}/*" = ["S101"] # Use of assert detected

[tool.ruff.format]
quote-style = "single"

[tool.ruff.lint.flake8-quotes]
inline-quotes = "single"

# ======== poethepoet =========
# https://github.com/nat-n/poethepoet
[tool.poe.tasks]
linting = "ruff check ."
formatting = "ruff format --check"
typing = "mypy ."
testing = "pytest"

setup-precommit = "pre-commit install"
setup = ["setup-precommit"]  # Complete development setup

precommit-check = "bash -c 'if [ ! -f .git/hooks/pre-commit ]; then echo Installing pre-commit hooks...; pre-commit install; fi; pre-commit run --all-files'"
codevalidation = ["linting", "formatting", "typing", "testing", "precommit-check"]
